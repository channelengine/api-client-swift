//
// OfferAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OfferAPI {
    /**
     Update stock or price.
     
     - parameter updates: (body) References to the products that should be updated, and the new values  for the stock or price fields. It is possible to supply only one of the two fields  or both. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func offerStockPriceUpdate(updates: [MerchantStockPriceUpdateRequest], completion: @escaping ((_ data: SingleOfCollectionsDictionary2Generic?,_ error: Error?) -> Void)) {
        offerStockPriceUpdateWithRequestBuilder(updates: updates).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Update stock or price.
     - PUT /v2/offer
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{contentType=application/json, example={
  "Message" : "Message",
  "ValidationErrors" : {
    "key" : [ "ValidationErrors", "ValidationErrors" ]
  },
  "Content" : {
    "key" : [ "Content", "Content" ]
  },
  "StatusCode" : 0,
  "Success" : true
}}]
     
     - parameter updates: (body) References to the products that should be updated, and the new values  for the stock or price fields. It is possible to supply only one of the two fields  or both. 

     - returns: RequestBuilder<SingleOfCollectionsDictionary2Generic> 
     */
    open class func offerStockPriceUpdateWithRequestBuilder(updates: [MerchantStockPriceUpdateRequest]) -> RequestBuilder<SingleOfCollectionsDictionary2Generic> {
        let path = "/v2/offer"
        let URLString = ChannelEngineApiClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updates)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SingleOfCollectionsDictionary2Generic>.Type = ChannelEngineApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
