//
// OrderFilter.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct OrderFilter: Codable {

    public enum Statuses: String, Codable { 
        case inProgress = "IN_PROGRESS"
        case shipped = "SHIPPED"
        case inBackorder = "IN_BACKORDER"
        case canceled = "CANCELED"
        case manco = "MANCO"
        case inCombi = "IN_COMBI"
        case closed = "CLOSED"
        case new = "NEW"
        case returned = "RETURNED"
        case requiresCorrection = "REQUIRES_CORRECTION"
    }
    public enum FulfillmentType: String, Codable { 
        case all = "ALL"
        case onlyMerchant = "ONLY_MERCHANT"
        case onlyChannel = "ONLY_CHANNEL"
        case mixed = "MIXED"
    }
    /** Order status(es) to filter on */
    public var statuses: [Statuses]?
    /** Filter on unique order reference used by the merchant */
    public var merchantOrderNos: [String]?
    /** Exclude order (lines) fulfilled by the marketplace (amazon:FBA, bol:LVB, etc.) */
    public var excludeMarketplaceFulfilledOrdersAndLines: Bool?
    /** Filter orders on fulfillment type. This will include all orders lines, even if they are partially fulfilled by the marketplace.  To exclude orders and lines that are fulfilled by the marketplace from the response, set ExcludeMarketplaceFulfilledOrdersAndLines to true. */
    public var fulfillmentType: FulfillmentType?
    /** The page to filter on. Starts at 1. */
    public var page: Int?


    public enum CodingKeys: String, CodingKey { 
        case statuses = "Statuses"
        case merchantOrderNos = "MerchantOrderNos"
        case excludeMarketplaceFulfilledOrdersAndLines = "ExcludeMarketplaceFulfilledOrdersAndLines"
        case fulfillmentType = "FulfillmentType"
        case page = "Page"
    }


}

