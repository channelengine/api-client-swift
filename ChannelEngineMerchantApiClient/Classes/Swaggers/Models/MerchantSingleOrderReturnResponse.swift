//
// MerchantSingleOrderReturnResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct MerchantSingleOrderReturnResponse: Codable {

    public enum Status: String, Codable { 
        case inProgress = "IN_PROGRESS"
        case received = "RECEIVED"
        case cancelled = "CANCELLED"
    }
    public enum Reason: String, Codable { 
        case productDefect = "PRODUCT_DEFECT"
        case productUnsatisfactory = "PRODUCT_UNSATISFACTORY"
        case wrongProduct = "WRONG_PRODUCT"
        case tooManyProducts = "TOO_MANY_PRODUCTS"
        case refused = "REFUSED"
        case refusedDamaged = "REFUSED_DAMAGED"
        case wrongAddress = "WRONG_ADDRESS"
        case notCollected = "NOT_COLLECTED"
        case wrongSize = "WRONG_SIZE"
        case other = "OTHER"
    }
    /** The unique order reference used by the Merchant */
    public var merchantOrderNo: String?
    public var lines: [MerchantSingleOrderReturnLineResponse]?
    /** The date at which the return was created in ChannelEngine */
    public var createdAt: Date?
    /** The date at which the return was last modified in ChannelEngine */
    public var updatedAt: Date?
    /** The unique return reference used by the Merchant, will be empty in case of a channel or unacknowledged return */
    public var merchantReturnNo: String?
    /** The unique return reference used by the Channel, will be empty in case of a merchant return */
    public var channelReturnNo: String?
    /** The current status of the return */
    public var status: Status?
    /** The unique return reference used by ChannelEngine */
    public var _id: Int?
    /** The reason code of the return */
    public var reason: Reason?
    /** Optional. Comment of customer on the (reason of) the return */
    public var customerComment: String?
    /** Optional. Comment of merchant on the return. */
    public var merchantComment: String?
    /** Refund amount incl. VAT */
    public var refundInclVat: Double?
    /** Refund amount excl. VAT */
    public var refundExclVat: Double?

    public init(merchantOrderNo: String?, lines: [MerchantSingleOrderReturnLineResponse]?, createdAt: Date?, updatedAt: Date?, merchantReturnNo: String?, channelReturnNo: String?, status: Status?, _id: Int?, reason: Reason?, customerComment: String?, merchantComment: String?, refundInclVat: Double?, refundExclVat: Double?) {
        self.merchantOrderNo = merchantOrderNo
        self.lines = lines
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.merchantReturnNo = merchantReturnNo
        self.channelReturnNo = channelReturnNo
        self.status = status
        self._id = _id
        self.reason = reason
        self.customerComment = customerComment
        self.merchantComment = merchantComment
        self.refundInclVat = refundInclVat
        self.refundExclVat = refundExclVat
    }

    public enum CodingKeys: String, CodingKey { 
        case merchantOrderNo = "MerchantOrderNo"
        case lines = "Lines"
        case createdAt = "CreatedAt"
        case updatedAt = "UpdatedAt"
        case merchantReturnNo = "MerchantReturnNo"
        case channelReturnNo = "ChannelReturnNo"
        case status = "Status"
        case _id = "Id"
        case reason = "Reason"
        case customerComment = "CustomerComment"
        case merchantComment = "MerchantComment"
        case refundInclVat = "RefundInclVat"
        case refundExclVat = "RefundExclVat"
    }


}

