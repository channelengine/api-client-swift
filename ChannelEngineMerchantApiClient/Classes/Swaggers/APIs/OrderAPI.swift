//
// OrderAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OrderAPI {
    /**
     Acknowledge Order
     
     - parameter model: (body) Relations between the id&#39;s returned by ChannelEngine and the references which the merchant uses 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderAcknowledge(model: OrderAcknowledgement, completion: @escaping ((_ data: ApiResponse?,_ error: Error?) -> Void)) {
        orderAcknowledgeWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Acknowledge Order
     - POST /v2/orders/acknowledge
     - Acknowledge an order. By acknowledging the order the merchant can confirm that  the order has been imported. When acknowledging an order the merchant has to supply  references that uniquely identify the order and the order lines. These references  will be used in the other API calls.
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{contentType=application/json, example={
  "Message" : "Message",
  "ValidationErrors" : {
    "key" : [ "ValidationErrors", "ValidationErrors" ]
  },
  "StatusCode" : 0,
  "LogId" : 6,
  "Success" : true
}}]
     
     - parameter model: (body) Relations between the id&#39;s returned by ChannelEngine and the references which the merchant uses 

     - returns: RequestBuilder<ApiResponse> 
     */
    open class func orderAcknowledgeWithRequestBuilder(model: OrderAcknowledgement) -> RequestBuilder<ApiResponse> {
        let path = "/v2/orders/acknowledge"
        let URLString = ChannelEngineMerchantApiClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: model)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ApiResponse>.Type = ChannelEngineMerchantApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     * enum for parameter filterStatuses
     */
    public enum FilterStatuses_orderGetByFilter: String { 
        case inProgress = "IN_PROGRESS"
        case shipped = "SHIPPED"
        case inBackorder = "IN_BACKORDER"
        case manco = "MANCO"
        case inCombi = "IN_COMBI"
        case closed = "CLOSED"
        case new = "NEW"
        case returned = "RETURNED"
        case requiresCorrection = "REQUIRES_CORRECTION"
    }

    /**
     * enum for parameter filterFulfillmentType
     */
    public enum FilterFulfillmentType_orderGetByFilter: String { 
        case all = "ALL"
        case onlyMerchant = "ONLY_MERCHANT"
        case onlyChannel = "ONLY_CHANNEL"
        case mixed = "MIXED"
    }

    /**
     Get Orders By Filter
     
     - parameter filterStatuses: (query) Order status(es) to filter on (optional)
     - parameter filterMerchantOrderNos: (query) Filter on unique order reference used by the merchant (optional)
     - parameter filterFromDate: (query) Filter on the order date, starting from this date. This date is inclusive. (optional)
     - parameter filterToDate: (query) Filter on the order date, until this date. This date is exclusive. (optional)
     - parameter filterExcludeMarketplaceFulfilledOrdersAndLines: (query) Exclude order (lines) fulfilled by the marketplace (amazon:FBA, bol:LVB, etc.) (optional)
     - parameter filterFulfillmentType: (query) Filter orders on fulfillment type. This will include all orders lines, even if they are partially fulfilled by the marketplace.  To exclude orders and lines that are fulfilled by the marketplace from the response, set ExcludeMarketplaceFulfilledOrdersAndLines to true. (optional)
     - parameter filterPage: (query) The page to filter on. Starts at 1. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderGetByFilter(filterStatuses: [String]? = nil, filterMerchantOrderNos: [String]? = nil, filterFromDate: Date? = nil, filterToDate: Date? = nil, filterExcludeMarketplaceFulfilledOrdersAndLines: Bool? = nil, filterFulfillmentType: FilterFulfillmentType_orderGetByFilter? = nil, filterPage: Int? = nil, completion: @escaping ((_ data: CollectionOfMerchantOrderResponse?,_ error: Error?) -> Void)) {
        orderGetByFilterWithRequestBuilder(filterStatuses: filterStatuses, filterMerchantOrderNos: filterMerchantOrderNos, filterFromDate: filterFromDate, filterToDate: filterToDate, filterExcludeMarketplaceFulfilledOrdersAndLines: filterExcludeMarketplaceFulfilledOrdersAndLines, filterFulfillmentType: filterFulfillmentType, filterPage: filterPage).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get Orders By Filter
     - GET /v2/orders
     - Fetch orders based on the provided OrderFilter
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{contentType=application/json, example={
  "TotalCount" : 3,
  "Message" : "Message",
  "ValidationErrors" : {
    "key" : [ "ValidationErrors", "ValidationErrors" ]
  },
  "Content" : [ {
    "Email" : "Email",
    "VatNo" : "VatNo",
    "SubTotalInclVat" : 6.02745618307040320615897144307382404804229736328125,
    "OriginalShippingCostsVat" : 2.027123023002321833274663731572218239307403564453125,
    "OriginalSubTotalVat" : 9.301444243932575517419536481611430644989013671875,
    "CurrencyCode" : "CurrencyCode",
    "BillingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "CompanyRegistrationNo" : "CompanyRegistrationNo",
    "TotalVat" : 2.3021358869347654518833223846741020679473876953125,
    "Phone" : "Phone",
    "ChannelCustomerNo" : "ChannelCustomerNo",
    "ChannelOrderSupport" : "NONE",
    "ShippingCostsVat" : 5.962133916683182377482808078639209270477294921875,
    "SubTotalVat" : 1.46581298050294517310021547018550336360931396484375,
    "TotalInclVat" : 5.63737665663332876420099637471139430999755859375,
    "Status" : "IN_PROGRESS",
    "ChannelOrderNo" : "ChannelOrderNo",
    "ExtraData" : {
      "key" : "ExtraData"
    },
    "OrderDate" : "2000-01-23T04:56:07.000+00:00",
    "ChannelName" : "ChannelName",
    "ShippingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "OriginalTotalVat" : 7.3862819483858839220147274318151175975799560546875,
    "ShippingCostsInclVat" : 9.0183481860707832566959041287191212177276611328125,
    "OriginalSubTotalInclVat" : 7.061401241503109105224211816675961017608642578125,
    "PaymentMethod" : "PaymentMethod",
    "Id" : 0,
    "OriginalShippingCostsInclVat" : 3.61607674925191080461672754609026014804840087890625,
    "OriginalTotalInclVat" : 4.1456080298839363962315474054776132106781005859375,
    "Lines" : [ {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    }, {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    } ]
  }, {
    "Email" : "Email",
    "VatNo" : "VatNo",
    "SubTotalInclVat" : 6.02745618307040320615897144307382404804229736328125,
    "OriginalShippingCostsVat" : 2.027123023002321833274663731572218239307403564453125,
    "OriginalSubTotalVat" : 9.301444243932575517419536481611430644989013671875,
    "CurrencyCode" : "CurrencyCode",
    "BillingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "CompanyRegistrationNo" : "CompanyRegistrationNo",
    "TotalVat" : 2.3021358869347654518833223846741020679473876953125,
    "Phone" : "Phone",
    "ChannelCustomerNo" : "ChannelCustomerNo",
    "ChannelOrderSupport" : "NONE",
    "ShippingCostsVat" : 5.962133916683182377482808078639209270477294921875,
    "SubTotalVat" : 1.46581298050294517310021547018550336360931396484375,
    "TotalInclVat" : 5.63737665663332876420099637471139430999755859375,
    "Status" : "IN_PROGRESS",
    "ChannelOrderNo" : "ChannelOrderNo",
    "ExtraData" : {
      "key" : "ExtraData"
    },
    "OrderDate" : "2000-01-23T04:56:07.000+00:00",
    "ChannelName" : "ChannelName",
    "ShippingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "OriginalTotalVat" : 7.3862819483858839220147274318151175975799560546875,
    "ShippingCostsInclVat" : 9.0183481860707832566959041287191212177276611328125,
    "OriginalSubTotalInclVat" : 7.061401241503109105224211816675961017608642578125,
    "PaymentMethod" : "PaymentMethod",
    "Id" : 0,
    "OriginalShippingCostsInclVat" : 3.61607674925191080461672754609026014804840087890625,
    "OriginalTotalInclVat" : 4.1456080298839363962315474054776132106781005859375,
    "Lines" : [ {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    }, {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    } ]
  } ],
  "ItemsPerPage" : 6,
  "Count" : 6,
  "StatusCode" : 1,
  "LogId" : 2,
  "Success" : true
}}]
     
     - parameter filterStatuses: (query) Order status(es) to filter on (optional)
     - parameter filterMerchantOrderNos: (query) Filter on unique order reference used by the merchant (optional)
     - parameter filterFromDate: (query) Filter on the order date, starting from this date. This date is inclusive. (optional)
     - parameter filterToDate: (query) Filter on the order date, until this date. This date is exclusive. (optional)
     - parameter filterExcludeMarketplaceFulfilledOrdersAndLines: (query) Exclude order (lines) fulfilled by the marketplace (amazon:FBA, bol:LVB, etc.) (optional)
     - parameter filterFulfillmentType: (query) Filter orders on fulfillment type. This will include all orders lines, even if they are partially fulfilled by the marketplace.  To exclude orders and lines that are fulfilled by the marketplace from the response, set ExcludeMarketplaceFulfilledOrdersAndLines to true. (optional)
     - parameter filterPage: (query) The page to filter on. Starts at 1. (optional)

     - returns: RequestBuilder<CollectionOfMerchantOrderResponse> 
     */
    open class func orderGetByFilterWithRequestBuilder(filterStatuses: [String]? = nil, filterMerchantOrderNos: [String]? = nil, filterFromDate: Date? = nil, filterToDate: Date? = nil, filterExcludeMarketplaceFulfilledOrdersAndLines: Bool? = nil, filterFulfillmentType: FilterFulfillmentType_orderGetByFilter? = nil, filterPage: Int? = nil) -> RequestBuilder<CollectionOfMerchantOrderResponse> {
        let path = "/v2/orders"
        let URLString = ChannelEngineMerchantApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "filter.statuses": filterStatuses, 
            "filter.merchantOrderNos": filterMerchantOrderNos, 
            "filter.fromDate": filterFromDate?.encodeToJSON(), 
            "filter.toDate": filterToDate?.encodeToJSON(), 
            "filter.excludeMarketplaceFulfilledOrdersAndLines": filterExcludeMarketplaceFulfilledOrdersAndLines, 
            "filter.fulfillmentType": filterFulfillmentType?.rawValue, 
            "filter.page": filterPage?.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<CollectionOfMerchantOrderResponse>.Type = ChannelEngineMerchantApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get New Orders
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderGetNew(completion: @escaping ((_ data: CollectionOfMerchantOrderResponse?,_ error: Error?) -> Void)) {
        orderGetNewWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get New Orders
     - GET /v2/orders/new
     - Fetch newly placed orders (order with status NEW).
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{contentType=application/json, example={
  "TotalCount" : 3,
  "Message" : "Message",
  "ValidationErrors" : {
    "key" : [ "ValidationErrors", "ValidationErrors" ]
  },
  "Content" : [ {
    "Email" : "Email",
    "VatNo" : "VatNo",
    "SubTotalInclVat" : 6.02745618307040320615897144307382404804229736328125,
    "OriginalShippingCostsVat" : 2.027123023002321833274663731572218239307403564453125,
    "OriginalSubTotalVat" : 9.301444243932575517419536481611430644989013671875,
    "CurrencyCode" : "CurrencyCode",
    "BillingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "CompanyRegistrationNo" : "CompanyRegistrationNo",
    "TotalVat" : 2.3021358869347654518833223846741020679473876953125,
    "Phone" : "Phone",
    "ChannelCustomerNo" : "ChannelCustomerNo",
    "ChannelOrderSupport" : "NONE",
    "ShippingCostsVat" : 5.962133916683182377482808078639209270477294921875,
    "SubTotalVat" : 1.46581298050294517310021547018550336360931396484375,
    "TotalInclVat" : 5.63737665663332876420099637471139430999755859375,
    "Status" : "IN_PROGRESS",
    "ChannelOrderNo" : "ChannelOrderNo",
    "ExtraData" : {
      "key" : "ExtraData"
    },
    "OrderDate" : "2000-01-23T04:56:07.000+00:00",
    "ChannelName" : "ChannelName",
    "ShippingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "OriginalTotalVat" : 7.3862819483858839220147274318151175975799560546875,
    "ShippingCostsInclVat" : 9.0183481860707832566959041287191212177276611328125,
    "OriginalSubTotalInclVat" : 7.061401241503109105224211816675961017608642578125,
    "PaymentMethod" : "PaymentMethod",
    "Id" : 0,
    "OriginalShippingCostsInclVat" : 3.61607674925191080461672754609026014804840087890625,
    "OriginalTotalInclVat" : 4.1456080298839363962315474054776132106781005859375,
    "Lines" : [ {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    }, {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    } ]
  }, {
    "Email" : "Email",
    "VatNo" : "VatNo",
    "SubTotalInclVat" : 6.02745618307040320615897144307382404804229736328125,
    "OriginalShippingCostsVat" : 2.027123023002321833274663731572218239307403564453125,
    "OriginalSubTotalVat" : 9.301444243932575517419536481611430644989013671875,
    "CurrencyCode" : "CurrencyCode",
    "BillingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "CompanyRegistrationNo" : "CompanyRegistrationNo",
    "TotalVat" : 2.3021358869347654518833223846741020679473876953125,
    "Phone" : "Phone",
    "ChannelCustomerNo" : "ChannelCustomerNo",
    "ChannelOrderSupport" : "NONE",
    "ShippingCostsVat" : 5.962133916683182377482808078639209270477294921875,
    "SubTotalVat" : 1.46581298050294517310021547018550336360931396484375,
    "TotalInclVat" : 5.63737665663332876420099637471139430999755859375,
    "Status" : "IN_PROGRESS",
    "ChannelOrderNo" : "ChannelOrderNo",
    "ExtraData" : {
      "key" : "ExtraData"
    },
    "OrderDate" : "2000-01-23T04:56:07.000+00:00",
    "ChannelName" : "ChannelName",
    "ShippingAddress" : {
      "StreetName" : "StreetName",
      "CompanyName" : "CompanyName",
      "HouseNrAddition" : "HouseNrAddition",
      "CountryIso" : "CountryIso",
      "HouseNr" : "HouseNr",
      "FirstName" : "FirstName",
      "ZipCode" : "ZipCode",
      "Region" : "Region",
      "Gender" : "MALE",
      "LastName" : "LastName",
      "City" : "City",
      "Original" : "Original"
    },
    "OriginalTotalVat" : 7.3862819483858839220147274318151175975799560546875,
    "ShippingCostsInclVat" : 9.0183481860707832566959041287191212177276611328125,
    "OriginalSubTotalInclVat" : 7.061401241503109105224211816675961017608642578125,
    "PaymentMethod" : "PaymentMethod",
    "Id" : 0,
    "OriginalShippingCostsInclVat" : 3.61607674925191080461672754609026014804840087890625,
    "OriginalTotalInclVat" : 4.1456080298839363962315474054776132106781005859375,
    "Lines" : [ {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    }, {
      "Status" : "IN_PROGRESS",
      "UnitPriceInclVat" : 9.3693102714106686335071572102606296539306640625,
      "Condition" : "NEW",
      "UnitVat" : 1.231513536777255612975068288506008684635162353515625,
      "FeeFixed" : 6.683562403749608193948006373830139636993408203125,
      "FeeRate" : 8.7620420127490010742121739895083010196685791015625,
      "Quantity" : 5,
      "OriginalUnitVat" : 7.4577447736837658709418974467553198337554931640625,
      "IsFulfillmentByMarketplace" : true,
      "OriginalLineTotalInclVat" : 1.173074250955943309548956676735542714595794677734375,
      "Gtin" : "Gtin",
      "OriginalUnitPriceInclVat" : 6.8468526983526398765889098285697400569915771484375,
      "LineVat" : 1.489415909854170383397331534069962799549102783203125,
      "OriginalLineVat" : 4.9652184929849543237878606305457651615142822265625,
      "CancellationRequestedQuantity" : 9,
      "MerchantProductNo" : "MerchantProductNo",
      "LineTotalInclVat" : 1.024645700144157789424070870154537260532379150390625,
      "ChannelProductNo" : "ChannelProductNo"
    } ]
  } ],
  "ItemsPerPage" : 6,
  "Count" : 6,
  "StatusCode" : 1,
  "LogId" : 2,
  "Success" : true
}}]

     - returns: RequestBuilder<CollectionOfMerchantOrderResponse> 
     */
    open class func orderGetNewWithRequestBuilder() -> RequestBuilder<CollectionOfMerchantOrderResponse> {
        let path = "/v2/orders/new"
        let URLString = ChannelEngineMerchantApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CollectionOfMerchantOrderResponse>.Type = ChannelEngineMerchantApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Download Invoice
     
     - parameter merchantOrderNo: (path) The unique order reference as used by the merchant 
     - parameter useCustomerCulture: (query) Generate the invoice in the billing address&#39; country&#39;s language (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderInvoice(merchantOrderNo: String, useCustomerCulture: Bool? = nil, completion: @escaping ((_ data: URL?,_ error: Error?) -> Void)) {
        orderInvoiceWithRequestBuilder(merchantOrderNo: merchantOrderNo, useCustomerCulture: useCustomerCulture).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Download Invoice
     - GET /v2/orders/{merchantOrderNo}/invoice
     - Generates the ChannelEngine VAT invoice for this order in PDF
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{output=none}]
     
     - parameter merchantOrderNo: (path) The unique order reference as used by the merchant 
     - parameter useCustomerCulture: (query) Generate the invoice in the billing address&#39; country&#39;s language (optional, default to false)

     - returns: RequestBuilder<URL> 
     */
    open class func orderInvoiceWithRequestBuilder(merchantOrderNo: String, useCustomerCulture: Bool? = nil) -> RequestBuilder<URL> {
        var path = "/v2/orders/{merchantOrderNo}/invoice"
        let merchantOrderNoPreEscape = "\(merchantOrderNo)"
        let merchantOrderNoPostEscape = merchantOrderNoPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{merchantOrderNo}", with: merchantOrderNoPostEscape, options: .literal, range: nil)
        let URLString = ChannelEngineMerchantApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "useCustomerCulture": useCustomerCulture
        ])
        

        let requestBuilder: RequestBuilder<URL>.Type = ChannelEngineMerchantApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Download Packing Slip
     
     - parameter merchantOrderNo: (path) The unique order reference as used by the merchant 
     - parameter useCustomerCulture: (query) Generate the invoice in the billing address&#39; country&#39;s language (optional, default to false)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderPackingSlip(merchantOrderNo: String, useCustomerCulture: Bool? = nil, completion: @escaping ((_ data: URL?,_ error: Error?) -> Void)) {
        orderPackingSlipWithRequestBuilder(merchantOrderNo: merchantOrderNo, useCustomerCulture: useCustomerCulture).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Download Packing Slip
     - GET /v2/orders/{merchantOrderNo}/packingslip
     - Generates the ChannelEngine packing slip for this order in PDF
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{output=none}]
     
     - parameter merchantOrderNo: (path) The unique order reference as used by the merchant 
     - parameter useCustomerCulture: (query) Generate the invoice in the billing address&#39; country&#39;s language (optional, default to false)

     - returns: RequestBuilder<URL> 
     */
    open class func orderPackingSlipWithRequestBuilder(merchantOrderNo: String, useCustomerCulture: Bool? = nil) -> RequestBuilder<URL> {
        var path = "/v2/orders/{merchantOrderNo}/packingslip"
        let merchantOrderNoPreEscape = "\(merchantOrderNo)"
        let merchantOrderNoPostEscape = merchantOrderNoPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{merchantOrderNo}", with: merchantOrderNoPostEscape, options: .literal, range: nil)
        let URLString = ChannelEngineMerchantApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "useCustomerCulture": useCustomerCulture
        ])
        

        let requestBuilder: RequestBuilder<URL>.Type = ChannelEngineMerchantApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
