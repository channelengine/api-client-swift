//
// StockLocationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class StockLocationAPI {
    /**
     Get the stock locations (or virtual warehouses)
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func stockLocationIndex(completion: @escaping ((_ data: CollectionOfMerchantStockLocationResponse?,_ error: Error?) -> Void)) {
        stockLocationIndexWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the stock locations (or virtual warehouses)
     - GET /v2/stocklocations
     - Get the different stock locations (or virtual warehouses) that are in use.  This may include stock locations for 'fulfillment by ... (Amazon/bol/CDiscount)' (FBA/LVB/FBC) solutions.  You can use the id's to get to stock of products in specific stock location, e.g. the FBA stock for the products.
     - API Key:
       - type: apiKey apikey (QUERY)
       - name: apikey
     - examples: [{contentType=application/json, example={
  "TotalCount" : 1,
  "Message" : "Message",
  "ValidationErrors" : {
    "key" : [ "ValidationErrors", "ValidationErrors" ]
  },
  "Content" : [ {
    "Id" : 0,
    "Name" : "Name"
  }, {
    "Id" : 0,
    "Name" : "Name"
  } ],
  "ItemsPerPage" : 5,
  "Count" : 6,
  "StatusCode" : 5,
  "LogId" : 2,
  "Success" : true
}}]

     - returns: RequestBuilder<CollectionOfMerchantStockLocationResponse> 
     */
    open class func stockLocationIndexWithRequestBuilder() -> RequestBuilder<CollectionOfMerchantStockLocationResponse> {
        let path = "/v2/stocklocations"
        let URLString = ChannelEngineMerchantApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
        ])

        let requestBuilder: RequestBuilder<CollectionOfMerchantStockLocationResponse>.Type = ChannelEngineMerchantApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
